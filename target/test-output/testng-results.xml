<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="TC_001" duration-ms="5457" started-at="2020-02-17T17:34:05Z" finished-at="2020-02-17T17:34:10Z">
    <groups>
    </groups>
    <test name="TC_01_Index" duration-ms="5457" started-at="2020-02-17T17:34:05Z" finished-at="2020-02-17T17:34:10Z">
      <class name="com.demo.tests.TestCase_01">
        <test-method status="PASS" signature="browserConfig(java.lang.String)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="browserConfig" is-config="true" duration-ms="7718" started-at="2020-02-17T17:33:57Z" finished-at="2020-02-17T17:34:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserConfig -->
        <test-method status="PASS" signature="cleanReportData()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="cleanReportData" is-config="true" duration-ms="6" started-at="2020-02-17T17:34:05Z" finished-at="2020-02-17T17:34:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanReportData -->
        <test-method status="PASS" signature="setEnvironmentConfiguration()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="setEnvironmentConfiguration" is-config="true" duration-ms="1" started-at="2020-02-17T17:34:05Z" finished-at="2020-02-17T17:34:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setEnvironmentConfiguration -->
        <test-method status="PASS" signature="userLogin(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="userLogin" duration-ms="441" started-at="2020-02-17T17:34:05Z" finished-at="2020-02-17T17:34:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.userLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="2" started-at="2020-02-17T17:34:05Z" finished-at="2020-02-17T17:34:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLogin status=SUCCESS method=TestCase_01.userLogin(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="clientInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="clientInfo" duration-ms="214" started-at="2020-02-17T17:34:05Z" finished-at="2020-02-17T17:34:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.clientInfo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clientInfo -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="2" started-at="2020-02-17T17:34:06Z" finished-at="2020-02-17T17:34:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clientInfo status=SUCCESS method=TestCase_01.clientInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="productsPopular(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="productsPopular" duration-ms="3642" started-at="2020-02-17T17:34:06Z" finished-at="2020-02-17T17:34:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.productsPopular(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productsPopular -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="1" started-at="2020-02-17T17:34:09Z" finished-at="2020-02-17T17:34:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productsPopular status=SUCCESS method=TestCase_01.productsPopular(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="products(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="products" duration-ms="213" started-at="2020-02-17T17:34:09Z" finished-at="2020-02-17T17:34:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.products(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- products -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="3" started-at="2020-02-17T17:34:09Z" finished-at="2020-02-17T17:34:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=products status=SUCCESS method=TestCase_01.products(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="marketsPageProducts(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="marketsPageProducts" duration-ms="186" started-at="2020-02-17T17:34:09Z" finished-at="2020-02-17T17:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.marketsPageProducts(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketsPageProducts -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="2" started-at="2020-02-17T17:34:10Z" finished-at="2020-02-17T17:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=marketsPageProducts status=SUCCESS method=TestCase_01.marketsPageProducts(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="currencyInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="currencyInfo" duration-ms="478" started-at="2020-02-17T17:34:10Z" finished-at="2020-02-17T17:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.currencyInfo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currencyInfo -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="8" started-at="2020-02-17T17:34:10Z" finished-at="2020-02-17T17:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=currencyInfo status=SUCCESS method=TestCase_01.currencyInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="FAIL" signature="convertCurrency(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="convertCurrency" duration-ms="239" started-at="2020-02-17T17:34:10Z" finished-at="2020-02-17T17:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.convertCurrency(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.demo.scripts.api.degiro.orders.CurrencyTransaction.currencyTransaction(CurrencyTransaction.java:111)
at com.demo.tests.TestCase_01.convertCurrency(TestCase_01.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertCurrency -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="19" started-at="2020-02-17T17:34:10Z" finished-at="2020-02-17T17:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=convertCurrency status=FAILURE method=TestCase_01.convertCurrency(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="clearXmlFiles()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="clearXmlFiles" is-config="true" duration-ms="10" started-at="2020-02-17T17:34:10Z" finished-at="2020-02-17T17:34:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXmlFiles -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="tearDown" is-config="true" duration-ms="632" started-at="2020-02-17T17:34:10Z" depends-on-methods="com.demo.config.BasicTestConfig.clearXmlFiles" finished-at="2020-02-17T17:34:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="flushReportData()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="flushReportData" is-config="true" duration-ms="185" started-at="2020-02-17T17:34:11Z" finished-at="2020-02-17T17:34:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReportData -->
      </class> <!-- com.demo.tests.TestCase_01 -->
    </test> <!-- TC_01_Index -->
  </suite> <!-- TC_001 -->
</testng-results>
