<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="7" total="9" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-20T18:53:52Z" name="TC_001" finished-at="2020-02-20T18:54:38Z" duration-ms="45267">
    <groups>
    </groups>
    <test started-at="2020-02-20T18:53:52Z" name="TC_01_Index" finished-at="2020-02-20T18:54:38Z" duration-ms="45267">
      <class name="com.demo.tests.TestCase_01">
        <test-method is-config="true" signature="browserConfig(java.lang.String)[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:53:47Z" name="browserConfig" finished-at="2020-02-20T18:53:52Z" duration-ms="5398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserConfig -->
        <test-method is-config="true" signature="cleanReportData()[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:53:52Z" name="cleanReportData" finished-at="2020-02-20T18:53:52Z" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanReportData -->
        <test-method is-config="true" signature="setEnvironmentConfiguration()[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:53:52Z" name="setEnvironmentConfiguration" finished-at="2020-02-20T18:53:52Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setEnvironmentConfiguration -->
        <test-method signature="userLogin(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:53:52Z" name="userLogin" finished-at="2020-02-20T18:54:14Z" duration-ms="21641" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.userLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.apache.http.conn.HttpHostConnectException">
            <message>
              <![CDATA[Connect to internal.degiro.eu:443 [internal.degiro.eu/192.168.20.79] failed: Connection timed out: connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.apache.http.conn.HttpHostConnectException: Connect to internal.degiro.eu:443 [internal.degiro.eu/192.168.20.79] failed: Connection timed out: connect
at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)
at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:107)
at com.demo.scripts.api.degiro.account.Login.secureLogin(Login.java:72)
at com.demo.tests.TestCase_01.userLogin(TestCase_01.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Connection timed out: connect
at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)
at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)
at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
at java.base/java.net.Socket.connect(Socket.java:608)
at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:337)
at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.apache.http.conn.HttpHostConnectException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:54:14Z" name="generateReport" finished-at="2020-02-20T18:54:15Z" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLogin status=FAILURE method=TestCase_01.userLogin(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="productsPopular(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:54:15Z" name="productsPopular" finished-at="2020-02-20T18:54:37Z" duration-ms="21751" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.productsPopular(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.demo.scripts.ui.degiro.UserLogin.secureLoginWeb(UserLogin.java:43)
at com.demo.scripts.ui.degiro.PopularProducts.checkFormVisualization(PopularProducts.java:37)
at com.demo.tests.TestCase_01.productsPopular(TestCase_01.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productsPopular -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:54:37Z" name="generateReport" finished-at="2020-02-20T18:54:38Z" duration-ms="804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productsPopular status=FAILURE method=TestCase_01.productsPopular(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="clearXmlFiles()[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:54:38Z" name="clearXmlFiles" finished-at="2020-02-20T18:54:38Z" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXmlFiles -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:54:38Z" name="tearDown" finished-at="2020-02-20T18:54:39Z" depends-on-methods="com.demo.config.BasicTestConfig.clearXmlFiles" duration-ms="786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReportData()[pri:0, instance:com.demo.tests.TestCase_01@71c27ee8]" started-at="2020-02-20T18:54:39Z" name="flushReportData" finished-at="2020-02-20T18:54:40Z" duration-ms="785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReportData -->
      </class> <!-- com.demo.tests.TestCase_01 -->
    </test> <!-- TC_01_Index -->
  </suite> <!-- TC_001 -->
</testng-results>
