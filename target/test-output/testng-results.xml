<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="TC_001" duration-ms="1596" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:22Z">
    <groups>
    </groups>
    <test name="TC_01_Index" duration-ms="1596" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:22Z">
      <class name="com.demo.tests.TestCase_01">
        <test-method status="PASS" signature="browserConfig(java.lang.String)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="browserConfig" is-config="true" duration-ms="6921" started-at="2020-02-12T16:22:14Z" finished-at="2020-02-12T16:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserConfig -->
        <test-method status="PASS" signature="cleanReportData()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="cleanReportData" is-config="true" duration-ms="5" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanReportData -->
        <test-method status="PASS" signature="setEnvironmentConfiguration()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="setEnvironmentConfiguration" is-config="true" duration-ms="1" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setEnvironmentConfiguration -->
        <test-method status="PASS" signature="userLogin(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="userLogin" duration-ms="650" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.userLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="2" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLogin status=SUCCESS method=TestCase_01.userLogin(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="clientInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="clientInfo" duration-ms="308" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.clientInfo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clientInfo -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="1" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clientInfo status=SUCCESS method=TestCase_01.clientInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="FAIL" signature="productsPopular(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="productsPopular" duration-ms="37" started-at="2020-02-12T16:22:21Z" finished-at="2020-02-12T16:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.productsPopular(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"._36CbGFJLG6WzVjeXIpURvd[data-id=marketsMenuItem]"}
  (Session info: chrome=80.0.3987.87)
  (Driver info: chromedriver=72.0.3626.7 (efcef9a3ecda02b2132af215116a03852d08b9cb),platform=Windows NT 10.0.18363 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: 'unknown', revision: 'unknown', time: 'unknown'
System info: host: 'QAIT006', ip: '172.18.4.214', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 72.0.3626.7 (efcef9a3ecda02..., userDataDir: C:\Users\PPopov\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:56405}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 80.0.3987.87, webStorageEnabled: true}
Session ID: 5b2eba3ece765bb9f12e3c20e4db8eee
*** Element info: {Using=css selector, value=._36CbGFJLG6WzVjeXIpURvd[data-id=marketsMenuItem]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"._36CbGFJLG6WzVjeXIpURvd[data-id=marketsMenuItem]"}
  (Session info: chrome=80.0.3987.87)
  (Driver info: chromedriver=72.0.3626.7 (efcef9a3ecda02b2132af215116a03852d08b9cb),platform=Windows NT 10.0.18363 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: 'unknown', revision: 'unknown', time: 'unknown'
System info: host: 'QAIT006', ip: '172.18.4.214', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 72.0.3626.7 (efcef9a3ecda02..., userDataDir: C:\Users\PPopov\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:56405}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 80.0.3987.87, webStorageEnabled: true}
Session ID: 5b2eba3ece765bb9f12e3c20e4db8eee
*** Element info: {Using=css selector, value=._36CbGFJLG6WzVjeXIpURvd[data-id=marketsMenuItem]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at com.demo.scripts.ui.degiro.PopularProducts.checkFormVisualization(PopularProducts.java:61)
at com.demo.tests.TestCase_01.productsPopular(TestCase_01.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productsPopular -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="354" started-at="2020-02-12T16:22:22Z" finished-at="2020-02-12T16:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productsPopular status=FAILURE method=TestCase_01.productsPopular(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="products(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="products" duration-ms="236" started-at="2020-02-12T16:22:22Z" finished-at="2020-02-12T16:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.tests.TestCase_01.products(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- products -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="generateReport" is-config="true" duration-ms="2" started-at="2020-02-12T16:22:22Z" finished-at="2020-02-12T16:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=products status=SUCCESS method=TestCase_01.products(java.lang.reflect.Method)[pri:0, instance:com.demo.tests.TestCase_01@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="clearXmlFiles()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="clearXmlFiles" is-config="true" duration-ms="10" started-at="2020-02-12T16:22:22Z" finished-at="2020-02-12T16:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXmlFiles -->
        <test-method status="PASS" signature="flushReportData()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="flushReportData" is-config="true" duration-ms="186" started-at="2020-02-12T16:22:22Z" finished-at="2020-02-12T16:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReportData -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.demo.tests.TestCase_01@5c909414]" name="tearDown" is-config="true" duration-ms="596" started-at="2020-02-12T16:22:22Z" depends-on-methods="com.demo.config.BasicTestConfig.clearXmlFiles" finished-at="2020-02-12T16:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.demo.tests.TestCase_01 -->
    </test> <!-- TC_01_Index -->
  </suite> <!-- TC_001 -->
</testng-results>
