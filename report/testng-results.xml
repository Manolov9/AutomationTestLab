<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="12" total="20" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="TC_001" duration-ms="18371" started-at="2019-07-14T13:06:21Z" finished-at="2019-07-14T13:06:39Z">
    <groups>
    </groups>
    <test name="TC_01_Example" duration-ms="18371" started-at="2019-07-14T13:06:21Z" finished-at="2019-07-14T13:06:39Z">
      <class name="com.test.TC_04_AmelcoAPI.ID_04_PlaceBet">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-14T13:06:25Z" finished-at="2019-07-14T13:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805]" name="placeBet" duration-ms="1057" started-at="2019-07-14T13:06:25Z" finished-at="2019-07-14T13:06:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_04_PlaceBet.placeBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeBet -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805]" name="report" is-config="true" duration-ms="2" started-at="2019-07-14T13:06:27Z" finished-at="2019-07-14T13:06:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeBet status=SUCCESS method=ID_04_PlaceBet.placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_04_PlaceBet -->
      <class name="com.test.TC_05_Sumo.UI.ID_01_Promotions">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-14T13:06:27Z" finished-at="2019-07-14T13:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="openSumoHomePage()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="openSumoHomePage" duration-ms="2938" started-at="2019-07-14T13:06:27Z" finished-at="2019-07-14T13:06:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openSumoHomePage -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="2" started-at="2019-07-14T13:06:29Z" finished-at="2019-07-14T13:06:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openSumoHomePage status=SUCCESS method=ID_01_Promotions.openSumoHomePage()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="FAIL" signature="noSelectionBtnStates(java.lang.reflect.Method)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="noSelectionBtnStates" duration-ms="6108" started-at="2019-07-14T13:06:29Z" finished-at="2019-07-14T13:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_05_Sumo.UI.ID_01_Promotions.noSelectionBtnStates(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at javax.imageio.ImageIO.read(ImageIO.java:1301)
at com.setup.GetImageCompare.GetCompare(GetImageCompare.java:33)
at com.test.TC_05_Sumo.UI.ID_01_Promotions.noSelectionBtnStates(ID_01_Promotions.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noSelectionBtnStates -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="1623" started-at="2019-07-14T13:06:36Z" finished-at="2019-07-14T13:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=noSelectionBtnStates status=FAILURE method=ID_01_Promotions.noSelectionBtnStates(java.lang.reflect.Method)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="selectionBtnStates()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="selectionBtnStates" duration-ms="70" started-at="2019-07-14T13:06:37Z" finished-at="2019-07-14T13:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectionBtnStates -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="1" started-at="2019-07-14T13:06:37Z" finished-at="2019-07-14T13:06:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectionBtnStates status=SUCCESS method=ID_01_Promotions.selectionBtnStates()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="FAIL" signature="checkTable()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="checkTable" duration-ms="220" started-at="2019-07-14T13:06:37Z" finished-at="2019-07-14T13:06:37Z">
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at javax.imageio.ImageIO.read(ImageIO.java:1301)
at com.setup.GetImageCompare.GetCompare(GetImageCompare.java:27)
at com.test.TC_05_Sumo.UI.ID_01_Promotions.checkTable(ID_01_Promotions.java:162)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTable -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="1580" started-at="2019-07-14T13:06:37Z" finished-at="2019-07-14T13:06:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTable status=FAILURE method=ID_01_Promotions.checkTable()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_05_Sumo.UI.ID_01_Promotions -->
      <class name="com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-14T13:06:24Z" finished-at="2019-07-14T13:06:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916]" name="getOpenBets" duration-ms="1813" started-at="2019-07-14T13:06:24Z" finished-at="2019-07-14T13:06:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOpenBets -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916]" name="report" is-config="true" duration-ms="63" started-at="2019-07-14T13:06:25Z" finished-at="2019-07-14T13:06:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOpenBets status=SUCCESS method=ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets -->
      <class name="com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin">
        <test-method status="PASS" signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a]" name="externalLogin" duration-ms="1022" started-at="2019-07-14T13:06:23Z" finished-at="2019-07-14T13:06:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-14T13:06:23Z" finished-at="2019-07-14T13:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a]" name="report" is-config="true" duration-ms="2" started-at="2019-07-14T13:06:24Z" finished-at="2019-07-14T13:06:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=SUCCESS method=ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin -->
      <class name="com.test.TC_04_AmelcoAPI.ID_01_LogIn">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="setup" is-config="true" duration-ms="1735" started-at="2019-07-14T13:06:19Z" finished-at="2019-07-14T13:06:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="startTest" is-config="true" duration-ms="108" started-at="2019-07-14T13:06:21Z" finished-at="2019-07-14T13:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="loginRam" duration-ms="1737" started-at="2019-07-14T13:06:21Z" finished-at="2019-07-14T13:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_01_LogIn.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="report" is-config="true" duration-ms="10" started-at="2019-07-14T13:06:23Z" finished-at="2019-07-14T13:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=ID_01_LogIn.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="clearXml()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="clearXml" is-config="true" duration-ms="1" started-at="2019-07-14T13:06:39Z" finished-at="2019-07-14T13:06:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="tearDown" is-config="true" duration-ms="395" started-at="2019-07-14T13:06:39Z" depends-on-methods="com.setup.BasicSetup.clearXml" finished-at="2019-07-14T13:06:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_01_LogIn -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
