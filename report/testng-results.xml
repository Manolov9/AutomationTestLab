<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="12" total="20" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="TC_001" duration-ms="16449" started-at="2019-07-15T09:45:31Z" finished-at="2019-07-15T09:45:47Z">
    <groups>
    </groups>
    <test name="TC_01_Example" duration-ms="16449" started-at="2019-07-15T09:45:31Z" finished-at="2019-07-15T09:45:47Z">
      <class name="com.test.TC_04_AmelcoAPI.ID_04_PlaceBet">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805]" name="startTest" is-config="true" duration-ms="1" started-at="2019-07-15T09:45:36Z" finished-at="2019-07-15T09:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805]" name="placeBet" duration-ms="610" started-at="2019-07-15T09:45:36Z" finished-at="2019-07-15T09:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_04_PlaceBet.placeBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeBet -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805]" name="report" is-config="true" duration-ms="2" started-at="2019-07-15T09:45:36Z" finished-at="2019-07-15T09:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeBet status=SUCCESS method=ID_04_PlaceBet.placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@794cb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_04_PlaceBet -->
      <class name="com.test.TC_05_Sumo.UI.ID_01_Promotions">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="startTest" is-config="true" duration-ms="1" started-at="2019-07-15T09:45:36Z" finished-at="2019-07-15T09:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="openSumoHomePage()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="openSumoHomePage" duration-ms="4283" started-at="2019-07-15T09:45:36Z" finished-at="2019-07-15T09:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openSumoHomePage -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="2" started-at="2019-07-15T09:45:41Z" finished-at="2019-07-15T09:45:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openSumoHomePage status=SUCCESS method=ID_01_Promotions.openSumoHomePage()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="noSelectionBtnState(java.lang.reflect.Method)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="noSelectionBtnState" duration-ms="5948" started-at="2019-07-15T09:45:41Z" finished-at="2019-07-15T09:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_05_Sumo.UI.ID_01_Promotions.noSelectionBtnState(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noSelectionBtnState -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="1" started-at="2019-07-15T09:45:47Z" finished-at="2019-07-15T09:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=noSelectionBtnState status=SUCCESS method=ID_01_Promotions.noSelectionBtnState(java.lang.reflect.Method)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="selectionBtnState()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="selectionBtnState" duration-ms="94" started-at="2019-07-15T09:45:47Z" finished-at="2019-07-15T09:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectionBtnState -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="1" started-at="2019-07-15T09:45:47Z" finished-at="2019-07-15T09:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectionBtnState status=SUCCESS method=ID_01_Promotions.selectionBtnState()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="checkTable()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="checkTable" duration-ms="274" started-at="2019-07-15T09:45:47Z" finished-at="2019-07-15T09:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTable -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1]" name="report" is-config="true" duration-ms="1" started-at="2019-07-15T09:45:47Z" finished-at="2019-07-15T09:45:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTable status=SUCCESS method=ID_01_Promotions.checkTable()[pri:0, instance:com.test.TC_05_Sumo.UI.ID_01_Promotions@4b5a5ed1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_05_Sumo.UI.ID_01_Promotions -->
      <class name="com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin">
        <test-method status="PASS" signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a]" name="externalLogin" duration-ms="1067" started-at="2019-07-15T09:45:33Z" finished-at="2019-07-15T09:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-15T09:45:33Z" finished-at="2019-07-15T09:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a]" name="report" is-config="true" duration-ms="4" started-at="2019-07-15T09:45:34Z" finished-at="2019-07-15T09:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=SUCCESS method=ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@1ed1993a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin -->
      <class name="com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916]" name="startTest" is-config="true" duration-ms="1" started-at="2019-07-15T09:45:34Z" finished-at="2019-07-15T09:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916]" name="getOpenBets" duration-ms="1762" started-at="2019-07-15T09:45:34Z" finished-at="2019-07-15T09:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOpenBets -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916]" name="report" is-config="true" duration-ms="141" started-at="2019-07-15T09:45:36Z" finished-at="2019-07-15T09:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOpenBets status=SUCCESS method=ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1f3f4916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets -->
      <class name="com.test.TC_04_AmelcoAPI.ID_01_LogIn">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="setup" is-config="true" duration-ms="2508" started-at="2019-07-15T09:45:28Z" finished-at="2019-07-15T09:45:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="startTest" is-config="true" duration-ms="197" started-at="2019-07-15T09:45:31Z" finished-at="2019-07-15T09:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="loginRam" duration-ms="2026" started-at="2019-07-15T09:45:31Z" finished-at="2019-07-15T09:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_01_LogIn.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="report" is-config="true" duration-ms="17" started-at="2019-07-15T09:45:33Z" finished-at="2019-07-15T09:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=ID_01_LogIn.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="clearXml()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="clearXml" is-config="true" duration-ms="0" started-at="2019-07-15T09:45:47Z" finished-at="2019-07-15T09:45:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@5ccddd20]" name="tearDown" is-config="true" duration-ms="536" started-at="2019-07-15T09:45:47Z" depends-on-methods="com.setup.BasicSetup.clearXml" finished-at="2019-07-15T09:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_01_LogIn -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
