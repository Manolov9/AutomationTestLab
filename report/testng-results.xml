<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="32" total="41" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-30T18:42:38Z" name="TC_001" finished-at="2019-08-30T18:42:52Z" duration-ms="13905">
    <groups>
    </groups>
    <test started-at="2019-08-30T18:42:38Z" name="TC_01_Example" finished-at="2019-08-30T18:42:52Z" duration-ms="13905">
      <class name="com.test.uat.TC_01_Bet.LogInRam">
        <test-method is-config="true" signature="cleanTestData()[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac]" started-at="2019-08-30T18:42:34Z" name="cleanTestData" finished-at="2019-08-30T18:42:34Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanTestData -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac]" started-at="2019-08-30T18:42:34Z" name="setup" finished-at="2019-08-30T18:42:38Z" duration-ms="3583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[none]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac]" started-at="2019-08-30T18:42:38Z" name="startTest" finished-at="2019-08-30T18:42:38Z" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac]" started-at="2019-08-30T18:42:38Z" name="loginRam" finished-at="2019-08-30T18:42:40Z" duration-ms="2025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.LogInRam.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac]" started-at="2019-08-30T18:42:40Z" name="report" finished-at="2019-08-30T18:42:40Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=LogInRam.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method is-config="true" signature="clearXml()[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac]" started-at="2019-08-30T18:42:52Z" name="clearXml" finished-at="2019-08-30T18:42:52Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.test.uat.TC_01_Bet.LogInRam@1b955cac]" started-at="2019-08-30T18:42:52Z" name="tearDown" finished-at="2019-08-30T18:42:52Z" depends-on-methods="com.setup.BasicSetup.clearXml" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.uat.TC_01_Bet.LogInRam -->
      <class name="com.test.uat.TC_01_Bet.FootballSportTree">
        <test-method signature="getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.FootballSportTree@5a1de7fb]" started-at="2019-08-30T18:42:41Z" name="getSportsTree" finished-at="2019-08-30T18:42:47Z" duration-ms="5836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.FootballSportTree.getSportsTree(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSportsTree -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.FootballSportTree@5a1de7fb]" started-at="2019-08-30T18:42:41Z" name="startTest" finished-at="2019-08-30T18:42:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.FootballSportTree@5a1de7fb]" started-at="2019-08-30T18:42:47Z" name="report" finished-at="2019-08-30T18:42:47Z" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSportsTree status=SUCCESS method=FootballSportTree.getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.FootballSportTree@5a1de7fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.FootballSportTree -->
      <class name="com.test.uat.TC_01_Bet.CashoutBet">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.CashoutBet@6eb2384f]" started-at="2019-08-30T18:42:50Z" name="startTest" finished-at="2019-08-30T18:42:50Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="cashoutBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.CashoutBet@6eb2384f]" started-at="2019-08-30T18:42:50Z" name="cashoutBet" finished-at="2019-08-30T18:42:51Z" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.CashoutBet.cashoutBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cashoutBet -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.CashoutBet@6eb2384f]" started-at="2019-08-30T18:42:51Z" name="report" finished-at="2019-08-30T18:42:51Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cashoutBet status=SUCCESS method=CashoutBet.cashoutBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.CashoutBet@6eb2384f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.CashoutBet -->
      <class name="com.test.uat.TC_01_Bet.SessionID">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.SessionID@3c9c0d96]" started-at="2019-08-30T18:42:51Z" name="startTest" finished-at="2019-08-30T18:42:51Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionId(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.SessionID@3c9c0d96]" started-at="2019-08-30T18:42:51Z" name="sessionId" finished-at="2019-08-30T18:42:52Z" duration-ms="805" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.SessionID.sessionId(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionId -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.SessionID@3c9c0d96]" started-at="2019-08-30T18:42:52Z" name="report" finished-at="2019-08-30T18:42:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionId status=SUCCESS method=SessionID.sessionId(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.SessionID@3c9c0d96] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.SessionID -->
      <class name="com.test.uat.TC_01_Bet.OpenBets">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.OpenBets@32a68f4f]" started-at="2019-08-30T18:42:49Z" name="startTest" finished-at="2019-08-30T18:42:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="openBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.OpenBets@32a68f4f]" started-at="2019-08-30T18:42:49Z" name="openBets" finished-at="2019-08-30T18:42:50Z" duration-ms="410" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.OpenBets.openBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="com.jayway.jsonpath.PathNotFoundException">
            <message>
              <![CDATA[No results for path: $[0]['parts']['betPart'][0]['event']['name']]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.jayway.jsonpath.PathNotFoundException: No results for path: $[0]['parts']['betPart'][0]['event']['name']
at com.jayway.jsonpath.internal.path.EvaluationContextImpl.getValue(EvaluationContextImpl.java:133)
at com.jayway.jsonpath.JsonPath.read(JsonPath.java:187)
at com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:102)
at com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:89)
at com.jayway.jsonpath.JsonPath.read(JsonPath.java:488)
at com.test.uat.TC_01_Bet.OpenBets.openBets(OpenBets.java:112)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- com.jayway.jsonpath.PathNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBets -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.OpenBets@32a68f4f]" started-at="2019-08-30T18:42:50Z" name="report" finished-at="2019-08-30T18:42:50Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openBets status=FAILURE method=OpenBets.openBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.OpenBets@32a68f4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.OpenBets -->
      <class name="com.test.uat.TC_01_Bet.BetStatus">
        <test-method signature="betStatus(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.BetStatus@29a0cdb]" started-at="2019-08-30T18:42:49Z" name="betStatus" finished-at="2019-08-30T18:42:49Z" duration-ms="772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.BetStatus.betStatus(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betStatus -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.BetStatus@29a0cdb]" started-at="2019-08-30T18:42:49Z" name="startTest" finished-at="2019-08-30T18:42:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.BetStatus@29a0cdb]" started-at="2019-08-30T18:42:49Z" name="report" finished-at="2019-08-30T18:42:49Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=betStatus status=SUCCESS method=BetStatus.betStatus(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.BetStatus@29a0cdb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.BetStatus -->
      <class name="com.test.uat.TC_01_Bet.ExternalLogin">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ExternalLogin@676cf48]" started-at="2019-08-30T18:42:40Z" name="startTest" finished-at="2019-08-30T18:42:40Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ExternalLogin@676cf48]" started-at="2019-08-30T18:42:40Z" name="externalLogin" finished-at="2019-08-30T18:42:41Z" duration-ms="1241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ExternalLogin@676cf48]" started-at="2019-08-30T18:42:41Z" name="report" finished-at="2019-08-30T18:42:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=SUCCESS method=ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ExternalLogin@676cf48] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ExternalLogin -->
      <class name="com.test.uat.TC_01_Bet.CalculateCashout">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.CalculateCashout@73194df]" started-at="2019-08-30T18:42:50Z" name="startTest" finished-at="2019-08-30T18:42:50Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="calcCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.CalculateCashout@73194df]" started-at="2019-08-30T18:42:50Z" name="calcCashout" finished-at="2019-08-30T18:42:50Z" duration-ms="494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.CalculateCashout.calcCashout(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calcCashout -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.CalculateCashout@73194df]" started-at="2019-08-30T18:42:50Z" name="report" finished-at="2019-08-30T18:42:50Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=calcCashout status=SUCCESS method=CalculateCashout.calcCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.CalculateCashout@73194df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.CalculateCashout -->
      <class name="com.test.uat.TC_01_Bet.PlaceBet">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.PlaceBet@335b5620]" started-at="2019-08-30T18:42:47Z" name="startTest" finished-at="2019-08-30T18:42:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.PlaceBet@335b5620]" started-at="2019-08-30T18:42:47Z" name="placeBet" finished-at="2019-08-30T18:42:49Z" duration-ms="1453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.PlaceBet.placeBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeBet -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.PlaceBet@335b5620]" started-at="2019-08-30T18:42:49Z" name="report" finished-at="2019-08-30T18:42:49Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeBet status=SUCCESS method=PlaceBet.placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.PlaceBet@335b5620] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.PlaceBet -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
