<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="14" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-01-16T11:57:10Z" name="TC_001" finished-at="2020-01-16T11:57:27Z" duration-ms="17008">
    <groups>
    </groups>
    <test started-at="2020-01-16T11:57:10Z" name="TC_01_Epam" finished-at="2020-01-16T11:57:27Z" duration-ms="17008">
      <class name="com.demo.test_suites.backend.TS_01_Login">
        <test-method is-config="true" signature="browserConfig(java.lang.String)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:07Z" name="browserConfig" finished-at="2020-01-16T11:57:10Z" duration-ms="3298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserConfig -->
        <test-method is-config="true" signature="cleanReportData()[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:10Z" name="cleanReportData" finished-at="2020-01-16T11:57:10Z" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanReportData -->
        <test-method is-config="true" signature="setEnvironmentConfiguration()[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:10Z" name="setEnvironmentConfiguration" finished-at="2020-01-16T11:57:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setEnvironmentConfiguration -->
        <test-method signature="accessToken(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:10Z" name="accessToken" finished-at="2020-01-16T11:57:12Z" duration-ms="1361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.backend.TS_01_Login.accessToken(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessToken -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:12Z" name="generateReport" finished-at="2020-01-16T11:57:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessToken status=SUCCESS method=TS_01_Login.accessToken(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="newUser(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:12Z" name="newUser" finished-at="2020-01-16T11:57:12Z" duration-ms="607" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.backend.TS_01_Login.newUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.demo.test_scripts.api.RegisterUser.getNewUser(RegisterUser.java:87)
at com.demo.test_suites.backend.TS_01_Login.newUser(TS_01_Login.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newUser -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:12Z" name="generateReport" finished-at="2020-01-16T11:57:12Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newUser status=FAILURE method=TS_01_Login.newUser(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="login(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:12Z" name="login" finished-at="2020-01-16T11:57:13Z" duration-ms="516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.backend.TS_01_Login.login(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:13Z" name="generateReport" finished-at="2020-01-16T11:57:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=TS_01_Login.login(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="addAccountInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:13Z" name="addAccountInfo" finished-at="2020-01-16T11:57:13Z" duration-ms="378" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.backend.TS_01_Login.addAccountInfo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.demo.test_scripts.api.NewToken.addUserInfo(NewToken.java:89)
at com.demo.test_suites.backend.TS_01_Login.addAccountInfo(TS_01_Login.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAccountInfo -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:13Z" name="generateReport" finished-at="2020-01-16T11:57:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAccountInfo status=FAILURE method=TS_01_Login.addAccountInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="userInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:13Z" name="userInfo" finished-at="2020-01-16T11:57:14Z" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.backend.TS_01_Login.userInfo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userInfo -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:14Z" name="generateReport" finished-at="2020-01-16T11:57:14Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userInfo status=SUCCESS method=TS_01_Login.userInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="clearXmlFiles()[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:28Z" name="clearXmlFiles" finished-at="2020-01-16T11:57:28Z" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXmlFiles -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:28Z" name="tearDown" finished-at="2020-01-16T11:57:29Z" depends-on-methods="com.demo.config.BasicConfiguration.clearXmlFiles" duration-ms="801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReportData()[pri:0, instance:com.demo.test_suites.backend.TS_01_Login@5812f68b]" started-at="2020-01-16T11:57:29Z" name="flushReportData" finished-at="2020-01-16T11:57:29Z" duration-ms="620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReportData -->
      </class> <!-- com.demo.test_suites.backend.TS_01_Login -->
      <class name="com.demo.test_suites.frontend.TS_01_Items">
        <test-method signature="loadHomePage(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1]" started-at="2020-01-16T11:57:14Z" name="loadHomePage" finished-at="2020-01-16T11:57:17Z" duration-ms="3466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.frontend.TS_01_Items.loadHomePage(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadHomePage -->
        <test-method is-config="true" signature="report()[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1]" started-at="2020-01-16T11:57:14Z" name="report" finished-at="2020-01-16T11:57:14Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1]" started-at="2020-01-16T11:57:17Z" name="generateReport" finished-at="2020-01-16T11:57:17Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loadHomePage status=SUCCESS method=TS_01_Items.loadHomePage(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="searchItem(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1]" started-at="2020-01-16T11:57:17Z" name="searchItem" finished-at="2020-01-16T11:57:22Z" duration-ms="4411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.frontend.TS_01_Items.searchItem(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItem -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1]" started-at="2020-01-16T11:57:22Z" name="generateReport" finished-at="2020-01-16T11:57:22Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchItem status=SUCCESS method=TS_01_Items.searchItem(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="openItemDescription(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1]" started-at="2020-01-16T11:57:22Z" name="openItemDescription" finished-at="2020-01-16T11:57:27Z" duration-ms="5843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.frontend.TS_01_Items.openItemDescription(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openItemDescription -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1]" started-at="2020-01-16T11:57:27Z" name="generateReport" finished-at="2020-01-16T11:57:27Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openItemDescription status=SUCCESS method=TS_01_Items.openItemDescription(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.frontend.TS_01_Items@4426bff1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- com.demo.test_suites.frontend.TS_01_Items -->
    </test> <!-- TC_01_Epam -->
  </suite> <!-- TC_001 -->
</testng-results>
