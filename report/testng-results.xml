<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="12" total="17" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="TC_001" duration-ms="5383" started-at="2019-07-10T12:30:54Z" finished-at="2019-07-10T12:30:59Z">
    <groups>
    </groups>
    <test name="TC_01_Example" duration-ms="5383" started-at="2019-07-10T12:30:54Z" finished-at="2019-07-10T12:30:59Z">
      <class name="com.test.TC_04_AmelcoAPI.ID_04_PlaceBet">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@4e91d63f]" name="startTest" is-config="true" duration-ms="1" started-at="2019-07-10T12:30:58Z" finished-at="2019-07-10T12:30:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@4e91d63f]" name="placeBet" duration-ms="1" started-at="2019-07-10T12:30:58Z" finished-at="2019-07-10T12:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_04_PlaceBet.placeBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Unexpected char 0x20 at 11 in header name: Set-Cookie: WBID=]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Unexpected char 0x20 at 11 in header name: Set-Cookie: WBID=
at okhttp3.Headers$Companion.checkName(Headers.kt:424)
at okhttp3.Headers$Companion.access$checkName(Headers.kt:345)
at okhttp3.Headers$Builder.add(Headers.kt:243)
at okhttp3.Request$Builder.addHeader(Request.kt:210)
at com.test.TC_04_AmelcoAPI.ID_04_PlaceBet.placeBet(ID_04_PlaceBet.java:72)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeBet -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@4e91d63f]" name="report" is-config="true" duration-ms="6" started-at="2019-07-10T12:30:58Z" finished-at="2019-07-10T12:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeBet status=FAILURE method=ID_04_PlaceBet.placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_04_PlaceBet@4e91d63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_04_PlaceBet -->
      <class name="com.test.TC_05_SumoAPI.ID_01_PromotionsPage">
        <test-method status="PASS" signature="getPromotionConfigurations(java.lang.reflect.Method)[pri:0, instance:com.test.TC_05_SumoAPI.ID_01_PromotionsPage@d4342c2]" name="getPromotionConfigurations" duration-ms="614" started-at="2019-07-10T12:30:58Z" finished-at="2019-07-10T12:30:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_05_SumoAPI.ID_01_PromotionsPage.getPromotionConfigurations(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPromotionConfigurations -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_05_SumoAPI.ID_01_PromotionsPage@d4342c2]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-10T12:30:58Z" finished-at="2019-07-10T12:30:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_05_SumoAPI.ID_01_PromotionsPage@d4342c2]" name="report" is-config="true" duration-ms="54" started-at="2019-07-10T12:30:59Z" finished-at="2019-07-10T12:30:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPromotionConfigurations status=SUCCESS method=ID_01_PromotionsPage.getPromotionConfigurations(java.lang.reflect.Method)[pri:0, instance:com.test.TC_05_SumoAPI.ID_01_PromotionsPage@d4342c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_05_SumoAPI.ID_01_PromotionsPage -->
      <class name="com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@2f112965]" name="startTest" is-config="true" duration-ms="1" started-at="2019-07-10T12:30:56Z" finished-at="2019-07-10T12:30:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@2f112965]" name="externalLogin" duration-ms="987" started-at="2019-07-10T12:30:56Z" finished-at="2019-07-10T12:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@2f112965]" name="report" is-config="true" duration-ms="3" started-at="2019-07-10T12:30:57Z" finished-at="2019-07-10T12:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=SUCCESS method=ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@2f112965] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin -->
      <class name="com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1a04f701]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-10T12:30:57Z" finished-at="2019-07-10T12:30:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1a04f701]" name="getOpenBets" duration-ms="1740" started-at="2019-07-10T12:30:57Z" finished-at="2019-07-10T12:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOpenBets -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1a04f701]" name="report" is-config="true" duration-ms="67" started-at="2019-07-10T12:30:58Z" finished-at="2019-07-10T12:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOpenBets status=SUCCESS method=ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@1a04f701] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets -->
      <class name="com.test.TC_04_AmelcoAPI.ID_01_LogIn">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@43301423]" name="setup" is-config="true" duration-ms="1297" started-at="2019-07-10T12:30:52Z" finished-at="2019-07-10T12:30:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@43301423]" name="startTest" is-config="true" duration-ms="102" started-at="2019-07-10T12:30:54Z" finished-at="2019-07-10T12:30:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@43301423]" name="loginRam" duration-ms="1761" started-at="2019-07-10T12:30:54Z" finished-at="2019-07-10T12:30:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_01_LogIn.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@43301423]" name="report" is-config="true" duration-ms="35" started-at="2019-07-10T12:30:56Z" finished-at="2019-07-10T12:30:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=ID_01_LogIn.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@43301423] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="clearXml()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@43301423]" name="clearXml" is-config="true" duration-ms="1" started-at="2019-07-10T12:30:59Z" finished-at="2019-07-10T12:30:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@43301423]" name="tearDown" is-config="true" duration-ms="355" started-at="2019-07-10T12:30:59Z" depends-on-methods="com.setup.BasicSetup.clearXml" finished-at="2019-07-10T12:30:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_01_LogIn -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
