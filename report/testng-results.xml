<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="28" total="39" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="TC_001" duration-ms="8569" started-at="2019-08-01T15:28:47Z" finished-at="2019-08-01T15:28:55Z">
    <groups>
    </groups>
    <test name="TC_01_Example" duration-ms="8569" started-at="2019-08-01T15:28:47Z" finished-at="2019-08-01T15:28:55Z">
      <class name="com.test.uat.TC_01_Bet.ID_04_PlaceBet">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@5cee5251]" name="startTest" is-config="true" duration-ms="0" started-at="2019-08-01T15:28:51Z" finished-at="2019-08-01T15:28:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@5cee5251]" name="placeBet" duration-ms="511" started-at="2019-08-01T15:28:51Z" finished-at="2019-08-01T15:28:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_04_PlaceBet.placeBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeBet -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@5cee5251]" name="report" is-config="true" duration-ms="2" started-at="2019-08-01T15:28:51Z" finished-at="2019-08-01T15:28:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeBet status=SUCCESS method=ID_04_PlaceBet.placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@5cee5251] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_04_PlaceBet -->
      <class name="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="startTest" is-config="true" duration-ms="0" started-at="2019-08-01T15:28:53Z" finished-at="2019-08-01T15:28:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="openSumoHomePage()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="openSumoHomePage" duration-ms="8" started-at="2019-08-01T15:28:53Z" finished-at="2019-08-01T15:28:53Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/openqa/selenium/internal/Locatable]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/openqa/selenium/internal/Locatable
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.proxyForLocator(DefaultFieldDecorator.java:101)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:92)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:79)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:65)
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.openSumoHomePage(ID_01_Promotions.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.internal.Locatable
at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openSumoHomePage -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="report" is-config="true" duration-ms="491" started-at="2019-08-01T15:28:53Z" finished-at="2019-08-01T15:28:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openSumoHomePage status=FAILURE method=ID_01_Promotions.openSumoHomePage()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="FAIL" signature="noSelectionBtnState(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="noSelectionBtnState" duration-ms="0" started-at="2019-08-01T15:28:54Z" finished-at="2019-08-01T15:28:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.noSelectionBtnState(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/openqa/selenium/internal/Locatable]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/openqa/selenium/internal/Locatable
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.proxyForLocator(DefaultFieldDecorator.java:101)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:92)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:79)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:65)
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.noSelectionBtnState(ID_01_Promotions.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noSelectionBtnState -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="report" is-config="true" duration-ms="405" started-at="2019-08-01T15:28:54Z" finished-at="2019-08-01T15:28:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=noSelectionBtnState status=FAILURE method=ID_01_Promotions.noSelectionBtnState(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="report" is-config="true" duration-ms="394" started-at="2019-08-01T15:28:54Z" finished-at="2019-08-01T15:28:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectionBtnState status=FAILURE method=ID_01_Promotions.selectionBtnState()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="FAIL" signature="selectionBtnState()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="selectionBtnState" duration-ms="0" started-at="2019-08-01T15:28:54Z" finished-at="2019-08-01T15:28:54Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.selectionBtnState(ID_01_Promotions.java:129)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectionBtnState -->
        <test-method status="FAIL" signature="checkTable()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="checkTable" duration-ms="303" started-at="2019-08-01T15:28:54Z" finished-at="2019-08-01T15:28:55Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[input == null!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: input == null!
at javax.imageio.ImageIO.read(ImageIO.java:1299)
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.checkTable(ID_01_Promotions.java:162)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTable -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a]" name="report" is-config="true" duration-ms="412" started-at="2019-08-01T15:28:55Z" finished-at="2019-08-01T15:28:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTable status=FAILURE method=ID_01_Promotions.checkTable()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@65466a6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_02_Sumo.UI.ID_01_Promotions -->
      <class name="com.test.uat.TC_01_Bet.ID_05_GetBetStatus">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@433d61fb]" name="startTest" is-config="true" duration-ms="0" started-at="2019-08-01T15:28:51Z" finished-at="2019-08-01T15:28:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getBetStatus(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@433d61fb]" name="getBetStatus" duration-ms="683" started-at="2019-08-01T15:28:51Z" finished-at="2019-08-01T15:28:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_05_GetBetStatus.getBetStatus(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBetStatus -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@433d61fb]" name="report" is-config="true" duration-ms="1" started-at="2019-08-01T15:28:52Z" finished-at="2019-08-01T15:28:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getBetStatus status=SUCCESS method=ID_05_GetBetStatus.getBetStatus(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@433d61fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_05_GetBetStatus -->
      <class name="com.test.uat.TC_01_Bet.ID_01_LogIn">
        <test-method status="PASS" signature="cleanTestData()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3]" name="cleanTestData" is-config="true" duration-ms="14" started-at="2019-08-01T15:28:45Z" finished-at="2019-08-01T15:28:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanTestData -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3]" name="setup" is-config="true" duration-ms="1918" started-at="2019-08-01T15:28:45Z" finished-at="2019-08-01T15:28:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3]" name="startTest" is-config="true" duration-ms="112" started-at="2019-08-01T15:28:47Z" finished-at="2019-08-01T15:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3]" name="loginRam" duration-ms="2127" started-at="2019-08-01T15:28:47Z" finished-at="2019-08-01T15:28:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_01_LogIn.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3]" name="report" is-config="true" duration-ms="10" started-at="2019-08-01T15:28:49Z" finished-at="2019-08-01T15:28:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=ID_01_LogIn.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="clearXml()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3]" name="clearXml" is-config="true" duration-ms="1" started-at="2019-08-01T15:28:55Z" finished-at="2019-08-01T15:28:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@48aaecc3]" name="tearDown" is-config="true" duration-ms="432" started-at="2019-08-01T15:28:55Z" depends-on-methods="com.setup.BasicSetup.clearXml" finished-at="2019-08-01T15:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_01_LogIn -->
      <class name="com.test.uat.TC_01_Bet.ID_07_Cashout">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@5c909414]" name="startTest" is-config="true" duration-ms="0" started-at="2019-08-01T15:28:52Z" finished-at="2019-08-01T15:28:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="betCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@5c909414]" name="betCashout" duration-ms="444" started-at="2019-08-01T15:28:52Z" finished-at="2019-08-01T15:28:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_07_Cashout.betCashout(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betCashout -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@5c909414]" name="report" is-config="true" duration-ms="2" started-at="2019-08-01T15:28:53Z" finished-at="2019-08-01T15:28:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=betCashout status=SUCCESS method=ID_07_Cashout.betCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@5c909414] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_07_Cashout -->
      <class name="com.test.uat.TC_01_Bet.ID_08_GetSportsTree">
        <test-method status="PASS" signature="getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@4b14c583]" name="getSportsTree" duration-ms="490" started-at="2019-08-01T15:28:53Z" finished-at="2019-08-01T15:28:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_08_GetSportsTree.getSportsTree(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSportsTree -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@4b14c583]" name="startTest" is-config="true" duration-ms="0" started-at="2019-08-01T15:28:53Z" finished-at="2019-08-01T15:28:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@4b14c583]" name="report" is-config="true" duration-ms="7" started-at="2019-08-01T15:28:53Z" finished-at="2019-08-01T15:28:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSportsTree status=SUCCESS method=ID_08_GetSportsTree.getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@4b14c583] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_08_GetSportsTree -->
      <class name="com.test.uat.TC_01_Bet.ID_02_ExternalLogin">
        <test-method status="PASS" signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@7c0c77c7]" name="externalLogin" duration-ms="842" started-at="2019-08-01T15:28:49Z" finished-at="2019-08-01T15:28:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@7c0c77c7]" name="startTest" is-config="true" duration-ms="0" started-at="2019-08-01T15:28:49Z" finished-at="2019-08-01T15:28:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@7c0c77c7]" name="report" is-config="true" duration-ms="2" started-at="2019-08-01T15:28:50Z" finished-at="2019-08-01T15:28:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=SUCCESS method=ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_02_ExternalLogin -->
      <class name="com.test.uat.TC_01_Bet.ID_03_GetOpenBets">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@7adda9cc]" name="startTest" is-config="true" duration-ms="0" started-at="2019-08-01T15:28:50Z" finished-at="2019-08-01T15:28:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@7adda9cc]" name="getOpenBets" duration-ms="1235" started-at="2019-08-01T15:28:50Z" finished-at="2019-08-01T15:28:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOpenBets -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@7adda9cc]" name="report" is-config="true" duration-ms="69" started-at="2019-08-01T15:28:51Z" finished-at="2019-08-01T15:28:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOpenBets status=SUCCESS method=ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_03_GetOpenBets -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
