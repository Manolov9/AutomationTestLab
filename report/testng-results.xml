<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-01-12T22:57:13Z" name="TC_001" finished-at="2020-01-12T22:57:29Z" duration-ms="16829">
    <groups>
    </groups>
    <test started-at="2020-01-12T22:57:13Z" name="TC_01_Epam" finished-at="2020-01-12T22:57:29Z" duration-ms="16829">
      <class name="com.demo.test_suites.TC_01_Epam">
        <test-method is-config="true" signature="browserConfig(java.lang.String)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:09Z" name="browserConfig" finished-at="2020-01-12T22:57:13Z" duration-ms="3247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserConfig -->
        <test-method is-config="true" signature="cleanReportData()[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:13Z" name="cleanReportData" finished-at="2020-01-12T22:57:13Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanReportData -->
        <test-method is-config="true" signature="setEnvironmentConfiguration()[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:13Z" name="setEnvironmentConfiguration" finished-at="2020-01-12T22:57:13Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setEnvironmentConfiguration -->
        <test-method signature="accessToken(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:13Z" name="accessToken" finished-at="2020-01-12T22:57:14Z" duration-ms="1742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.TC_01_Epam.accessToken(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessToken -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:14Z" name="generateReport" finished-at="2020-01-12T22:57:14Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessToken status=SUCCESS method=TC_01_Epam.accessToken(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="newUser(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:14Z" name="newUser" finished-at="2020-01-12T22:57:15Z" duration-ms="408" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.TC_01_Epam.newUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.demo.test_scripts.api.RegisterUser.getNewUser(RegisterUser.java:87)
at com.demo.test_suites.TC_01_Epam.newUser(TC_01_Epam.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newUser -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:15Z" name="generateReport" finished-at="2020-01-12T22:57:15Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newUser status=FAILURE method=TC_01_Epam.newUser(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="login(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:15Z" name="login" finished-at="2020-01-12T22:57:15Z" duration-ms="530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.TC_01_Epam.login(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:15Z" name="generateReport" finished-at="2020-01-12T22:57:15Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=TC_01_Epam.login(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="addAccountInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:15Z" name="addAccountInfo" finished-at="2020-01-12T22:57:16Z" duration-ms="393" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.TC_01_Epam.addAccountInfo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.demo.test_scripts.api.AddUserInfo.addUserInfo(AddUserInfo.java:85)
at com.demo.test_suites.TC_01_Epam.addAccountInfo(TC_01_Epam.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAccountInfo -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:16Z" name="generateReport" finished-at="2020-01-12T22:57:16Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAccountInfo status=FAILURE method=TC_01_Epam.addAccountInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="userInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:16Z" name="userInfo" finished-at="2020-01-12T22:57:16Z" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.TC_01_Epam.userInfo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userInfo -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:16Z" name="generateReport" finished-at="2020-01-12T22:57:16Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userInfo status=SUCCESS method=TC_01_Epam.userInfo(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method signature="searchItem(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:16Z" name="searchItem" finished-at="2020-01-12T22:57:29Z" duration-ms="12833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.demo.test_suites.TC_01_Epam.searchItem(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItem -->
        <test-method is-config="true" signature="generateReport(org.testng.ITestResult)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:29Z" name="generateReport" finished-at="2020-01-12T22:57:29Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchItem status=SUCCESS method=TC_01_Epam.searchItem(java.lang.reflect.Method)[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="flushReportData()[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:29Z" name="flushReportData" finished-at="2020-01-12T22:57:29Z" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReportData -->
        <test-method is-config="true" signature="clearXmlFiles()[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:30Z" name="clearXmlFiles" finished-at="2020-01-12T22:57:30Z" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXmlFiles -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demo.test_suites.TC_01_Epam@4331d187]" started-at="2020-01-12T22:57:30Z" name="tearDown" finished-at="2020-01-12T22:57:31Z" depends-on-methods="com.demo.config.BasicConfiguration.clearXmlFiles" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.demo.test_suites.TC_01_Epam -->
    </test> <!-- TC_01_Epam -->
  </suite> <!-- TC_001 -->
</testng-results>
