<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="6" total="10" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="TC_001" duration-ms="4026" started-at="2019-07-05T19:47:32Z" finished-at="2019-07-05T19:47:36Z">
    <groups>
    </groups>
    <test name="TC_01_Example" duration-ms="4026" started-at="2019-07-05T19:47:32Z" finished-at="2019-07-05T19:47:36Z">
      <class name="com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@54c562f7]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-05T19:47:35Z" finished-at="2019-07-05T19:47:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@54c562f7]" name="getOpenBets" duration-ms="832" started-at="2019-07-05T19:47:35Z" finished-at="2019-07-05T19:47:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOpenBets -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@54c562f7]" name="report" is-config="true" duration-ms="82" started-at="2019-07-05T19:47:36Z" finished-at="2019-07-05T19:47:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOpenBets status=SUCCESS method=ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@54c562f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="FAIL" signature="getSelectionId()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@54c562f7]" name="getSelectionId" duration-ms="39" started-at="2019-07-05T19:47:36Z" finished-at="2019-07-05T19:47:36Z">
          <exception class="org.json.JSONException">
            <message>
              <![CDATA[JSONObject["selectionId"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.json.JSONException: JSONObject["selectionId"] not found.
at org.json.JSONObject.get(JSONObject.java:473)
at org.json.JSONObject.getLong(JSONObject.java:592)
at com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets.getSelectionId(ID_03_GetOpenBets.java:107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.json.JSONException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSelectionId -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@54c562f7]" name="report" is-config="true" duration-ms="78" started-at="2019-07-05T19:47:36Z" finished-at="2019-07-05T19:47:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSelectionId status=FAILURE method=ID_03_GetOpenBets.getSelectionId()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets@54c562f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_03_GetOpenBets -->
      <class name="com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin">
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@63a65a25]" name="startTest" is-config="true" duration-ms="0" started-at="2019-07-05T19:47:34Z" finished-at="2019-07-05T19:47:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@63a65a25]" name="externalLogin" duration-ms="999" started-at="2019-07-05T19:47:34Z" finished-at="2019-07-05T19:47:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@63a65a25]" name="report" is-config="true" duration-ms="2" started-at="2019-07-05T19:47:35Z" finished-at="2019-07-05T19:47:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=SUCCESS method=ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin@63a65a25] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_02_ExternalLogin -->
      <class name="com.test.TC_04_AmelcoAPI.ID_01_LogIn">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@6b26e945]" name="setup" is-config="true" duration-ms="1400" started-at="2019-07-05T19:47:31Z" finished-at="2019-07-05T19:47:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@6b26e945]" name="startTest" is-config="true" duration-ms="99" started-at="2019-07-05T19:47:32Z" finished-at="2019-07-05T19:47:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@6b26e945]" name="loginRam" duration-ms="1850" started-at="2019-07-05T19:47:32Z" finished-at="2019-07-05T19:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.TC_04_AmelcoAPI.ID_01_LogIn.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method status="PASS" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@6b26e945]" name="report" is-config="true" duration-ms="32" started-at="2019-07-05T19:47:34Z" finished-at="2019-07-05T19:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=ID_01_LogIn.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@6b26e945] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="clearXml()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@6b26e945]" name="clearXml" is-config="true" duration-ms="1" started-at="2019-07-05T19:47:36Z" finished-at="2019-07-05T19:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.test.TC_04_AmelcoAPI.ID_01_LogIn@6b26e945]" name="tearDown" is-config="true" duration-ms="359" started-at="2019-07-05T19:47:36Z" depends-on-methods="com.setup.BasicSetup.clearXml" finished-at="2019-07-05T19:47:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.TC_04_AmelcoAPI.ID_01_LogIn -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
