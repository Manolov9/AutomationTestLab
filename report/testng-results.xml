<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="24" total="31" passed="1" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-16T21:17:40Z" name="TC_001" finished-at="2019-08-16T21:18:45Z" duration-ms="65446">
    <groups>
    </groups>
    <test started-at="2019-08-16T21:17:40Z" name="TC_01_Example" finished-at="2019-08-16T21:18:45Z" duration-ms="65446">
      <class name="com.test.uat.TC_01_Bet.ID_04_PlaceBet">
        <test-method signature="placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@2e6a5539]" started-at="2019-08-16T21:18:43Z" name="placeBet" finished-at="2019-08-16T21:18:43Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_04_PlaceBet.placeBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value
at okhttp3.FormBody$Builder.add(FormBody.kt)
at com.test.uat.TC_01_Bet.ID_04_PlaceBet.placeBet(ID_04_PlaceBet.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeBet -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@2e6a5539]" started-at="2019-08-16T21:18:43Z" name="startTest" finished-at="2019-08-16T21:18:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@2e6a5539]" started-at="2019-08-16T21:18:43Z" name="report" finished-at="2019-08-16T21:18:44Z" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeBet status=FAILURE method=ID_04_PlaceBet.placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@2e6a5539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_04_PlaceBet -->
      <class name="com.test.uat.TC_01_Bet.ID_05_OpenBets">
        <test-method signature="openBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_OpenBets@3fc9504b]" started-at="2019-08-16T21:18:44Z" name="openBets" finished-at="2019-08-16T21:18:44Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_05_OpenBets.openBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value
at okhttp3.FormBody$Builder.add(FormBody.kt)
at com.test.uat.TC_01_Bet.ID_05_OpenBets.openBets(ID_05_OpenBets.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBets -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_OpenBets@3fc9504b]" started-at="2019-08-16T21:18:44Z" name="startTest" finished-at="2019-08-16T21:18:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_OpenBets@3fc9504b]" started-at="2019-08-16T21:18:44Z" name="report" finished-at="2019-08-16T21:18:44Z" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openBets status=FAILURE method=ID_05_OpenBets.openBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_OpenBets@3fc9504b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_05_OpenBets -->
      <class name="com.test.uat.TC_01_Bet.ID_01_LogIn">
        <test-method is-config="true" signature="cleanTestData()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d]" started-at="2019-08-16T21:17:38Z" name="cleanTestData" finished-at="2019-08-16T21:17:38Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanTestData -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d]" started-at="2019-08-16T21:17:38Z" name="setup" finished-at="2019-08-16T21:17:40Z" duration-ms="1916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d]" started-at="2019-08-16T21:17:40Z" name="startTest" finished-at="2019-08-16T21:17:40Z" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d]" started-at="2019-08-16T21:17:40Z" name="loginRam" finished-at="2019-08-16T21:17:42Z" duration-ms="2451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_01_LogIn.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d]" started-at="2019-08-16T21:17:42Z" name="report" finished-at="2019-08-16T21:17:42Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=ID_01_LogIn.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method is-config="true" signature="clearXml()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d]" started-at="2019-08-16T21:18:45Z" name="clearXml" finished-at="2019-08-16T21:18:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@2766ca9d]" started-at="2019-08-16T21:18:45Z" name="tearDown" finished-at="2019-08-16T21:18:45Z" depends-on-methods="com.setup.BasicSetup.clearXml" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_01_LogIn -->
      <class name="com.test.uat.TC_01_Bet.ID_06_CalculateCashout">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_06_CalculateCashout@6d025197]" started-at="2019-08-16T21:18:44Z" name="startTest" finished-at="2019-08-16T21:18:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="calcCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_06_CalculateCashout@6d025197]" started-at="2019-08-16T21:18:44Z" name="calcCashout" finished-at="2019-08-16T21:18:44Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_06_CalculateCashout.calcCashout(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value
at okhttp3.FormBody$Builder.add(FormBody.kt)
at com.test.uat.TC_01_Bet.ID_06_CalculateCashout.calcCashout(ID_06_CalculateCashout.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calcCashout -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_06_CalculateCashout@6d025197]" started-at="2019-08-16T21:18:44Z" name="report" finished-at="2019-08-16T21:18:45Z" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=calcCashout status=FAILURE method=ID_06_CalculateCashout.calcCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_06_CalculateCashout@6d025197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_06_CalculateCashout -->
      <class name="com.test.uat.TC_01_Bet.ID_02_ExternalLogin">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@5460cf3a]" started-at="2019-08-16T21:17:42Z" name="startTest" finished-at="2019-08-16T21:17:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@5460cf3a]" started-at="2019-08-16T21:17:42Z" name="externalLogin" finished-at="2019-08-16T21:18:43Z" duration-ms="60577" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="com.jayway.jsonpath.PathNotFoundException">
            <message>
              <![CDATA[Missing property in path $['Login']]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.jayway.jsonpath.PathNotFoundException: Missing property in path $['Login']
at com.jayway.jsonpath.internal.path.PathToken.handleObjectProperty(PathToken.java:72)
at com.jayway.jsonpath.internal.path.PropertyPathToken.evaluate(PropertyPathToken.java:79)
at com.jayway.jsonpath.internal.path.RootPathToken.evaluate(RootPathToken.java:62)
at com.jayway.jsonpath.internal.path.CompiledPath.evaluate(CompiledPath.java:53)
at com.jayway.jsonpath.internal.path.CompiledPath.evaluate(CompiledPath.java:61)
at com.jayway.jsonpath.JsonPath.read(JsonPath.java:187)
at com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:102)
at com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:89)
at com.jayway.jsonpath.JsonPath.read(JsonPath.java:502)
at com.test.uat.TC_01_Bet.ID_02_ExternalLogin.externalLogin(ID_02_ExternalLogin.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- com.jayway.jsonpath.PathNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@5460cf3a]" started-at="2019-08-16T21:18:43Z" name="report" finished-at="2019-08-16T21:18:43Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=FAILURE method=ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@5460cf3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_02_ExternalLogin -->
      <class name="com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree">
        <test-method signature="getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree@65a15628]" started-at="2019-08-16T21:18:43Z" name="getSportsTree" finished-at="2019-08-16T21:18:43Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree.getSportsTree(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value
at okhttp3.FormBody$Builder.add(FormBody.kt)
at com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree.getSportsTree(ID_03_GetFootballSportTree.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSportsTree -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree@65a15628]" started-at="2019-08-16T21:18:43Z" name="startTest" finished-at="2019-08-16T21:18:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree@65a15628]" started-at="2019-08-16T21:18:43Z" name="report" finished-at="2019-08-16T21:18:43Z" duration-ms="540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSportsTree status=FAILURE method=ID_03_GetFootballSportTree.getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree@65a15628] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_03_GetFootballSportTree -->
      <class name="com.test.uat.TC_01_Bet.ID_07_CashoutBet">
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_CashoutBet@27d4a09]" started-at="2019-08-16T21:18:45Z" name="report" finished-at="2019-08-16T21:18:45Z" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cashoutBet status=FAILURE method=ID_07_CashoutBet.cashoutBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_CashoutBet@27d4a09] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_CashoutBet@27d4a09]" started-at="2019-08-16T21:18:45Z" name="startTest" finished-at="2019-08-16T21:18:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="cashoutBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_CashoutBet@27d4a09]" started-at="2019-08-16T21:18:45Z" name="cashoutBet" finished-at="2019-08-16T21:18:45Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_07_CashoutBet.cashoutBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value
at okhttp3.FormBody$Builder.add(FormBody.kt)
at com.test.uat.TC_01_Bet.ID_07_CashoutBet.cashoutBet(ID_07_CashoutBet.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cashoutBet -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_07_CashoutBet -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
