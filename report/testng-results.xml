<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="28" total="39" passed="11" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-07-25T15:04:38Z" name="TC_001" finished-at="2019-07-25T15:05:00Z" duration-ms="22090">
    <groups>
    </groups>
    <test started-at="2019-07-25T15:04:38Z" name="TC_01_Example" finished-at="2019-07-25T15:05:00Z" duration-ms="22090">
      <class name="com.test.uat.TC_01_Bet.ID_04_PlaceBet">
        <test-method signature="placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@6c0d9d86]" started-at="2019-07-25T15:04:44Z" name="placeBet" finished-at="2019-07-25T15:04:45Z" duration-ms="1095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_04_PlaceBet.placeBet(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeBet -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@6c0d9d86]" started-at="2019-07-25T15:04:44Z" name="startTest" finished-at="2019-07-25T15:04:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@6c0d9d86]" started-at="2019-07-25T15:04:45Z" name="report" finished-at="2019-07-25T15:04:45Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeBet status=SUCCESS method=ID_04_PlaceBet.placeBet(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_04_PlaceBet@6c0d9d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_04_PlaceBet -->
      <class name="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions">
        <test-method signature="openSumoHomePage()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:04:50Z" name="openSumoHomePage" finished-at="2019-07-25T15:04:53Z" duration-ms="3033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openSumoHomePage -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:04:50Z" name="startTest" finished-at="2019-07-25T15:04:50Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:04:53Z" name="report" finished-at="2019-07-25T15:04:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openSumoHomePage status=SUCCESS method=ID_01_Promotions.openSumoHomePage()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method signature="noSelectionBtnState(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:04:53Z" name="noSelectionBtnState" finished-at="2019-07-25T15:04:58Z" duration-ms="5347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.noSelectionBtnState(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noSelectionBtnState -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:04:58Z" name="report" finished-at="2019-07-25T15:04:58Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=noSelectionBtnState status=SUCCESS method=ID_01_Promotions.noSelectionBtnState(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method signature="selectionBtnState()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:04:58Z" name="selectionBtnState" finished-at="2019-07-25T15:05:00Z" duration-ms="2148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectionBtnState -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:05:00Z" name="report" finished-at="2019-07-25T15:05:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectionBtnState status=SUCCESS method=ID_01_Promotions.selectionBtnState()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method signature="checkTable()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:05:00Z" name="checkTable" finished-at="2019-07-25T15:05:00Z" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTable -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22]" started-at="2019-07-25T15:05:00Z" name="report" finished-at="2019-07-25T15:05:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTable status=SUCCESS method=ID_01_Promotions.checkTable()[pri:0, instance:com.test.uat.TC_02_Sumo.UI.ID_01_Promotions@1fde5d22] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_02_Sumo.UI.ID_01_Promotions -->
      <class name="com.test.uat.TC_01_Bet.ID_05_GetBetStatus">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@4ce1d6d0]" started-at="2019-07-25T15:04:45Z" name="startTest" finished-at="2019-07-25T15:04:45Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="getBetStatus(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@4ce1d6d0]" started-at="2019-07-25T15:04:45Z" name="getBetStatus" finished-at="2019-07-25T15:04:46Z" duration-ms="851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_05_GetBetStatus.getBetStatus(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBetStatus -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@4ce1d6d0]" started-at="2019-07-25T15:04:46Z" name="report" finished-at="2019-07-25T15:04:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getBetStatus status=SUCCESS method=ID_05_GetBetStatus.getBetStatus(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_05_GetBetStatus@4ce1d6d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_05_GetBetStatus -->
      <class name="com.test.uat.TC_01_Bet.ID_01_LogIn">
        <test-method is-config="true" signature="cleanResponseData()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d]" started-at="2019-07-25T15:04:36Z" name="cleanResponseData" finished-at="2019-07-25T15:04:36Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanResponseData -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d]" started-at="2019-07-25T15:04:36Z" name="setup" finished-at="2019-07-25T15:04:38Z" duration-ms="2053" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d]" started-at="2019-07-25T15:04:38Z" name="startTest" finished-at="2019-07-25T15:04:38Z" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d]" started-at="2019-07-25T15:04:38Z" name="loginRam" finished-at="2019-07-25T15:04:40Z" duration-ms="1737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_01_LogIn.loginRam(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginRam -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d]" started-at="2019-07-25T15:04:40Z" name="report" finished-at="2019-07-25T15:04:40Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginRam status=SUCCESS method=ID_01_LogIn.loginRam(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d]" started-at="2019-07-25T15:05:00Z" name="tearDown" finished-at="2019-07-25T15:05:01Z" depends-on-methods="com.setup.BasicSetup.clearXml" duration-ms="461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="clearXml()[pri:0, instance:com.test.uat.TC_01_Bet.ID_01_LogIn@53de625d]" started-at="2019-07-25T15:05:00Z" name="clearXml" finished-at="2019-07-25T15:05:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearXml -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_01_LogIn -->
      <class name="com.test.uat.TC_01_Bet.ID_07_Cashout">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@24111ef1]" started-at="2019-07-25T15:04:46Z" name="startTest" finished-at="2019-07-25T15:04:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="betCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@24111ef1]" started-at="2019-07-25T15:04:46Z" name="betCashout" finished-at="2019-07-25T15:04:46Z" duration-ms="439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_07_Cashout.betCashout(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betCashout -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@24111ef1]" started-at="2019-07-25T15:04:46Z" name="report" finished-at="2019-07-25T15:04:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=betCashout status=SUCCESS method=ID_07_Cashout.betCashout(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_07_Cashout@24111ef1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_07_Cashout -->
      <class name="com.test.uat.TC_01_Bet.ID_08_GetSportsTree">
        <test-method signature="getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@1f3f02ee]" started-at="2019-07-25T15:04:46Z" name="getSportsTree" finished-at="2019-07-25T15:04:49Z" duration-ms="2822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_08_GetSportsTree.getSportsTree(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSportsTree -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@1f3f02ee]" started-at="2019-07-25T15:04:46Z" name="startTest" finished-at="2019-07-25T15:04:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@1f3f02ee]" started-at="2019-07-25T15:04:49Z" name="report" finished-at="2019-07-25T15:04:50Z" duration-ms="570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSportsTree status=SUCCESS method=ID_08_GetSportsTree.getSportsTree(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_08_GetSportsTree@1f3f02ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_08_GetSportsTree -->
      <class name="com.test.uat.TC_01_Bet.ID_02_ExternalLogin">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@535779e4]" started-at="2019-07-25T15:04:40Z" name="startTest" finished-at="2019-07-25T15:04:40Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@535779e4]" started-at="2019-07-25T15:04:40Z" name="externalLogin" finished-at="2019-07-25T15:04:41Z" duration-ms="1171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externalLogin -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@535779e4]" started-at="2019-07-25T15:04:41Z" name="report" finished-at="2019-07-25T15:04:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=externalLogin status=SUCCESS method=ID_02_ExternalLogin.externalLogin(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_02_ExternalLogin@535779e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_02_ExternalLogin -->
      <class name="com.test.uat.TC_01_Bet.ID_03_GetOpenBets">
        <test-method signature="getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@53fd0d10]" started-at="2019-07-25T15:04:41Z" name="getOpenBets" finished-at="2019-07-25T15:04:44Z" duration-ms="2474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.uat.TC_01_Bet.ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOpenBets -->
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@53fd0d10]" started-at="2019-07-25T15:04:41Z" name="startTest" finished-at="2019-07-25T15:04:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="report(org.testng.ITestResult)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@53fd0d10]" started-at="2019-07-25T15:04:44Z" name="report" finished-at="2019-07-25T15:04:44Z" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOpenBets status=SUCCESS method=ID_03_GetOpenBets.getOpenBets(java.lang.reflect.Method)[pri:0, instance:com.test.uat.TC_01_Bet.ID_03_GetOpenBets@53fd0d10] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
      </class> <!-- com.test.uat.TC_01_Bet.ID_03_GetOpenBets -->
    </test> <!-- TC_01_Example -->
  </suite> <!-- TC_001 -->
</testng-results>
