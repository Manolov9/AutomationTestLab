<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="BUL0000566.local" ignored="28" name="TC_01_Example" tests="11" failures="4" timestamp="26 Jul 2019 15:01:21 GMT" time="33.91" errors="0">
  <testcase name="loginRam" time="1.838" classname="com.test.uat.TC_01_Bet.ID_01_LogIn"/>
  <testcase name="externalLogin" time="1.06" classname="com.test.uat.TC_01_Bet.ID_02_ExternalLogin"/>
  <testcase name="getOpenBets" time="1.57" classname="com.test.uat.TC_01_Bet.ID_03_GetOpenBets">
    <failure type="java.lang.ClassCastException" message="java.lang.Double incompatible with java.lang.Long">
      <![CDATA[java.lang.ClassCastException: java.lang.Double incompatible with java.lang.Long
at com.test.uat.TC_01_Bet.ID_03_GetOpenBets.getOpenBets(ID_03_GetOpenBets.java:110)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:813)
]]>
    </failure>
  </testcase> <!-- getOpenBets -->
  <testcase name="placeBet" time="0.449" classname="com.test.uat.TC_01_Bet.ID_04_PlaceBet">
    <failure type="com.jayway.jsonpath.PathNotFoundException" message="Missing property in path $[&amp;apos;PlaceBetsResponse&amp;apos;]">
      <![CDATA[com.jayway.jsonpath.PathNotFoundException: Missing property in path $['PlaceBetsResponse']
at com.jayway.jsonpath.internal.path.PathToken.handleObjectProperty(PathToken.java:72)
at com.jayway.jsonpath.internal.path.PropertyPathToken.evaluate(PropertyPathToken.java:79)
at com.jayway.jsonpath.internal.path.RootPathToken.evaluate(RootPathToken.java:62)
at com.jayway.jsonpath.internal.path.CompiledPath.evaluate(CompiledPath.java:53)
at com.jayway.jsonpath.internal.path.CompiledPath.evaluate(CompiledPath.java:61)
at com.jayway.jsonpath.JsonPath.read(JsonPath.java:187)
at com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:102)
at com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:89)
at com.jayway.jsonpath.JsonPath.read(JsonPath.java:488)
at com.test.uat.TC_01_Bet.ID_04_PlaceBet.placeBet(ID_04_PlaceBet.java:115)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:813)
]]>
    </failure>
  </testcase> <!-- placeBet -->
  <testcase name="getBetStatus" time="0.695" classname="com.test.uat.TC_01_Bet.ID_05_GetBetStatus"/>
  <testcase name="betCashout" time="0.001" classname="com.test.uat.TC_01_Bet.ID_07_Cashout">
    <failure type="java.lang.IllegalArgumentException" message="Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value">
      <![CDATA[java.lang.IllegalArgumentException: Parameter specified as non-null is null: method okhttp3.FormBody$Builder.add, parameter value
at okhttp3.FormBody$Builder.add(FormBody.kt)
at com.test.uat.TC_01_Bet.ID_07_Cashout.betCashout(ID_07_Cashout.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:813)
]]>
    </failure>
  </testcase> <!-- betCashout -->
  <testcase name="getSportsTree" time="15.006" classname="com.test.uat.TC_01_Bet.ID_08_GetSportsTree">
    <failure type="java.io.InterruptedIOException" message="timeout">
      <![CDATA[java.io.InterruptedIOException: timeout
at okhttp3.internal.connection.Transmitter.timeoutExit(Transmitter.kt:104)
at okhttp3.internal.connection.Transmitter.maybeReleaseConnection(Transmitter.kt:293)
at okhttp3.internal.connection.Transmitter.noMoreExchanges(Transmitter.kt:257)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:192)
at okhttp3.RealCall.execute(RealCall.kt:66)
at com.setup.OkHttpClientUtils.okClientRequest(OkHttpClientUtils.java:49)
at com.test.uat.TC_01_Bet.ID_08_GetSportsTree.getSportsTree(ID_08_GetSportsTree.java:73)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:813)
Caused by: java.net.SocketException: Socket closed
at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
at java.net.SocketInputStream.read(SocketInputStream.java:171)
at java.net.SocketInputStream.read(SocketInputStream.java:141)
at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)
at sun.security.ssl.InputRecord.read(InputRecord.java:503)
at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:975)
at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:933)
at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)
at okio.InputStreamSource.read(Okio.kt:102)
at okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:159)
at okio.RealBufferedSource.indexOf(RealBufferedSource.kt:349)
at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.kt:222)
at okhttp3.internal.http1.Http1ExchangeCodec.readHeaderLine(Http1ExchangeCodec.kt:210)
at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.kt:181)
at okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:105)
at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:82)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)
... 23 more
]]>
    </failure>
  </testcase> <!-- getSportsTree -->
  <testcase name="openSumoHomePage" time="3.049" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions"/>
  <testcase name="noSelectionBtnState" time="6.486" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions"/>
  <testcase name="selectionBtnState" time="2.645" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions"/>
  <testcase name="checkTable" time="0.185" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions"/>
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite cleanResponseData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanResponseData -->
  <testcase name="@BeforeSuite cleanResponseData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanResponseData -->
  <testcase name="@BeforeSuite cleanResponseData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanResponseData -->
  <testcase name="@BeforeSuite cleanResponseData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanResponseData -->
  <testcase name="@BeforeSuite cleanResponseData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanResponseData -->
  <testcase name="@BeforeSuite cleanResponseData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanResponseData -->
  <testcase name="@BeforeSuite cleanResponseData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanResponseData -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
</testsuite> <!-- TC_01_Example -->
