<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="BUL0000566.local" ignored="28" name="TC_01_Example" tests="11" failures="4" timestamp="01 Aug 2019 15:28:55 GMT" time="8.569" errors="0">
  <testcase name="loginRam" time="2.127" classname="com.test.uat.TC_01_Bet.ID_01_LogIn"/>
  <testcase name="externalLogin" time="0.842" classname="com.test.uat.TC_01_Bet.ID_02_ExternalLogin"/>
  <testcase name="getOpenBets" time="1.235" classname="com.test.uat.TC_01_Bet.ID_03_GetOpenBets"/>
  <testcase name="placeBet" time="0.511" classname="com.test.uat.TC_01_Bet.ID_04_PlaceBet"/>
  <testcase name="getBetStatus" time="0.683" classname="com.test.uat.TC_01_Bet.ID_05_GetBetStatus"/>
  <testcase name="betCashout" time="0.444" classname="com.test.uat.TC_01_Bet.ID_07_Cashout"/>
  <testcase name="getSportsTree" time="0.49" classname="com.test.uat.TC_01_Bet.ID_08_GetSportsTree"/>
  <testcase name="openSumoHomePage" time="0.008" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions">
    <failure type="java.lang.NoClassDefFoundError" message="org/openqa/selenium/internal/Locatable">
      <![CDATA[java.lang.NoClassDefFoundError: org/openqa/selenium/internal/Locatable
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.proxyForLocator(DefaultFieldDecorator.java:101)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:92)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:79)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:65)
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.openSumoHomePage(ID_01_Promotions.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.internal.Locatable
at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
... 28 more
]]>
    </failure>
  </testcase> <!-- openSumoHomePage -->
  <testcase name="noSelectionBtnState" time="0.0" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions">
    <failure type="java.lang.NoClassDefFoundError" message="org/openqa/selenium/internal/Locatable">
      <![CDATA[java.lang.NoClassDefFoundError: org/openqa/selenium/internal/Locatable
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.proxyForLocator(DefaultFieldDecorator.java:101)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:92)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:79)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:65)
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.noSelectionBtnState(ID_01_Promotions.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- noSelectionBtnState -->
  <testcase name="selectionBtnState" time="0.0" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.selectionBtnState(ID_01_Promotions.java:129)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- selectionBtnState -->
  <testcase name="checkTable" time="0.303" classname="com.test.uat.TC_02_Sumo.UI.ID_01_Promotions">
    <failure type="java.lang.IllegalArgumentException" message="input == null!">
      <![CDATA[java.lang.IllegalArgumentException: input == null!
at javax.imageio.ImageIO.read(ImageIO.java:1299)
at com.test.uat.TC_02_Sumo.UI.ID_01_Promotions.checkTable(ID_01_Promotions.java:162)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- checkTable -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite setup" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase name="@BeforeSuite cleanTestData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase name="@BeforeSuite cleanTestData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase name="@BeforeSuite cleanTestData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase name="@BeforeSuite cleanTestData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase name="@BeforeSuite cleanTestData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase name="@BeforeSuite cleanTestData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase name="@BeforeSuite cleanTestData" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase name="@AfterSuite clearXml" time="0.0" classname="com.setup.BasicSetup">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
</testsuite> <!-- TC_01_Example -->
