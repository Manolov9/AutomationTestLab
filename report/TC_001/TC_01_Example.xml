<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="BUL0000566.local" failures="1" tests="4" name="TC_01_Example" time="7.848" errors="0" timestamp="07 Aug 2019 10:50:18 GMT">
  <testcase classname="com.test.uat.TC_01_Bet.ID_01_LogIn" name="loginRam" time="2.016"/>
  <testcase classname="com.test.uat.TC_01_Bet.ID_02_ExternalLogin" name="externalLogin" time="0.809"/>
  <testcase classname="com.test.uat.TC_01_Bet.ID_03_GetOpenBets" name="getOpenBets" time="1.214">
    <failure type="java.lang.ClassCastException" message="class java.lang.Long cannot be cast to class java.lang.Double (java.lang.Long and java.lang.Double are in module java.base of loader &amp;apos;bootstrap&amp;apos;)">
      <![CDATA[java.lang.ClassCastException: class java.lang.Long cannot be cast to class java.lang.Double (java.lang.Long and java.lang.Double are in module java.base of loader 'bootstrap')
at com.test.uat.TC_01_Bet.ID_03_GetOpenBets.getOpenBets(ID_03_GetOpenBets.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
    </failure>
  </testcase> <!-- getOpenBets -->
  <testcase classname="com.test.uat.TC_01_Bet.ID_08_GetSportsTree" name="getSportsTree" time="3.209"/>
  <testcase classname="com.setup.BasicSetup" name="@BeforeSuite setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase classname="com.setup.BasicSetup" name="@BeforeSuite setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase classname="com.setup.BasicSetup" name="@BeforeSuite setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setup -->
  <testcase classname="com.setup.BasicSetup" name="@BeforeSuite cleanTestData" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase classname="com.setup.BasicSetup" name="@BeforeSuite cleanTestData" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase classname="com.setup.BasicSetup" name="@BeforeSuite cleanTestData" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite cleanTestData -->
  <testcase classname="com.setup.BasicSetup" name="@AfterSuite clearXml" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase classname="com.setup.BasicSetup" name="@AfterSuite clearXml" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase classname="com.setup.BasicSetup" name="@AfterSuite clearXml" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite clearXml -->
  <testcase classname="com.setup.BasicSetup" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.setup.BasicSetup" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="com.setup.BasicSetup" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
</testsuite> <!-- TC_01_Example -->
